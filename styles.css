* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    --tertiary-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    --primary-color: #667eea;
    --secondary-color: #764ba2;
    --success-color: #4CAF50;
    --danger-color: #f44336;
    --warning-color: #ff9800;
    --light-bg: #f8f9ff;
    --light-border: #e1e5f2;
    --dark-text: #333;
    --medium-text: #666;
    --light-text: #888;
    --shadow: 0 10px 30px rgba(0,0,0,0.1);
    --radius: 12px;
    --transition: all 0.3s ease;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: var(--primary-gradient);
    min-height: 100vh;
    padding: 20px;
    color: var(--dark-text);
    line-height: 1.6;
}

.container {
    max-width: 900px;
    margin: 0 auto;
    background: white;
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    overflow: hidden;
    animation: fadeIn 0.5s ease;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.header {
    background: var(--primary-gradient);
    color: white;
    padding: 30px;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none"><path d="M0,0 L100,0 L100,100 Z" fill="rgba(255,255,255,0.05)"/></svg>');
    background-size: 100% 100%;
}

.header h1 {
    font-size: 2.5rem;
    margin-bottom: 10px;
    font-weight: 600;
    position: relative;
}

.header p {
    opacity: 0.9;
    font-size: 1.1rem;
    position: relative;
}

.stats {
    display: flex;
    justify-content: space-around;
    background: rgba(255,255,255,0.15);
    margin: 25px 0 10px;
    padding: 20px;
    border-radius: var(--radius);
    backdrop-filter: blur(5px);
    position: relative;
}

.stat {
    text-align: center;
    padding: 0 10px;
    position: relative;
}

.stat:not(:last-child)::after {
    content: '';
    position: absolute;
    right: -15px;
    top: 50%;
    transform: translateY(-50%);
    height: 40px;
    width: 1px;
    background: rgba(255,255,255,0.3);
}

.stat-number {
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 5px;
    text-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.stat-label {
    font-size: 0.9rem;
    opacity: 0.9;
    font-weight: 500;
}

.form-section {
    padding: 30px;
    background: var(--light-bg);
    position: relative;
}

.task-form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: 20px;
}

.form-group {
    display: flex;
    flex-direction: column;
}

.form-group.full-width {
    grid-column: span 2;
}

label {
    margin-bottom: 8px;
    font-weight: 600;
    color: var(--dark-text);
    display: flex;
    align-items: center;
}

label::after {
    content: '';
    flex-grow: 1;
    height: 1px;
    background: var(--light-border);
    margin-left: 10px;
    margin-top: 2px;
}

input, select, textarea {
    padding: 14px;
    border: 2px solid var(--light-border);
    border-radius: var(--radius);
    font-size: 1rem;
    transition: var(--transition);
    font-family: inherit;
}

input:focus, select:focus, textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

textarea {
    resize: vertical;
    min-height: 100px;
}

.add-btn {
    grid-column: span 2;
    background: var(--primary-gradient);
    color: white;
    border: none;
    padding: 16px;
    border-radius: var(--radius);
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

.add-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: 0.5s;
}

.add-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 7px 14px rgba(102, 126, 234, 0.4);
}

.add-btn:hover::before {
    left: 100%;
}

.tasks-section {
    padding: 0 30px 30px;
}

.filters {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-bottom: 30px;
    flex-wrap: wrap;
}

.filter-btn {
    padding: 10px 20px;
    border: 2px solid var(--light-border);
    background: white;
    border-radius: 30px;
    cursor: pointer;
    transition: var(--transition);
    font-weight: 500;
    position: relative;
    overflow: hidden;
}

.filter-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--primary-gradient);
    opacity: 0;
    z-index: -1;
    transition: var(--transition);
}

.filter-btn.active, .filter-btn:hover {
    color: white;
    border-color: var(--primary-color);
}

.filter-btn.active::before, .filter-btn:hover::before {
    opacity: 1;
}

.task-list {
    display: grid;
    gap: 20px;
}

.task-item {
    background: white;
    border: 2px solid var(--light-border);
    border-radius: var(--radius);
    padding: 25px;
    transition: var(--transition);
    position: relative;
    overflow: hidden;
    animation: slideIn 0.3s ease;
}

@keyframes slideIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.task-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background: var(--light-border);
    transition: var(--transition);
}

.task-item:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow);
}

.task-item.completed {
    opacity: 0.8;
    border-color: var(--success-color);
}

.task-item.completed::before {
    background: var(--success-color);
}

.task-item.overdue {
    border-color: var(--danger-color);
    background: #fff5f5;
}

.task-item.overdue::before {
    background: var(--danger-color);
}

.task-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 15px;
}

.task-title {
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--dark-text);
    flex-grow: 1;
    margin-right: 15px;
}

.task-priority {
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: bold;
    white-space: nowrap;
}

.priority-alta {
    background: #ffebee;
    color: #c62828;
}

.priority-media {
    background: #fff3e0;
    color: #ef6c00;
}

.priority-baja {
    background: #e8f5e8;
    color: #2e7d32;
}

.task-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    font-size: 0.9rem;
    color: var(--medium-text);
}

.task-subject {
    background: #e3f2fd;
    color: #1565c0;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
}

.task-due {
    font-weight: 500;
}

.task-description {
    color: var(--medium-text);
    margin-bottom: 20px;
    line-height: 1.6;
    padding: 15px;
    background: #f9f9f9;
    border-radius: 8px;
    border-left: 3px solid var(--primary-color);
}

.task-actions {
    display: flex;
    gap: 12px;
}

.btn {
    padding: 10px 18px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 500;
    transition: var(--transition);
    display: flex;
    align-items: center;
    gap: 5px;
}

.btn-complete {
    background: var(--success-color);
    color: white;
}

.btn-complete:hover {
    background: #3d8b40;
    transform: translateY(-2px);
}

.btn-delete {
    background: var(--danger-color);
    color: white;
}

.btn-delete:hover {
    background: #d32f2f;
    transform: translateY(-2px);
}

.btn-edit {
    background: var(--warning-color);
    color: white;
}

.btn-edit:hover {
    background: #f57c00;
    transform: translateY(-2px);
}

.empty-state {
    text-align: center;
    padding: 50px 20px;
    color: var(--medium-text);
}

.empty-icon {
    font-size: 4rem;
    opacity: 0.5;
    margin-bottom: 20px;
}

.empty-state h3 {
    margin-bottom: 10px;
    font-weight: 600;
}

.notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 25px;
    border-radius: var(--radius);
    color: white;
    font-weight: 500;
    z-index: 1000;
    box-shadow: var(--shadow);
    transform: translateX(0);
    transition: var(--transition);
}

.notification.success {
    background: var(--success-color);
}

.notification.error {
    background: var(--danger-color);
}

.notification.hidden {
    transform: translateX(100%);
    opacity: 0;
}

/* Responsive design */
@media (max-width: 768px) {
    .container {
        border-radius: 15px;
    }
    
    .header {
        padding: 20px;
    }
    
    .header h1 {
        font-size: 2rem;
    }
    
    .stats {
        flex-direction: column;
        gap: 15px;
        padding: 15px;
    }
    
    .stat:not(:last-child)::after {
        display: none;
    }
    
    .form-section, .tasks-section {
        padding: 20px;
    }
    
    .task-form {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .form-group.full-width {
        grid-column: span 1;
    }
    
    .add-btn {
        grid-column: span 1;
    }
    
    .filters {
        justify-content: flex-start;
        overflow-x: auto;
        padding-bottom: 10px;
    }
    
    .task-item {
        padding: 20px;
    }
    
    .task-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .task-meta {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .task-actions {
        flex-wrap: wrap;
    }
}

@media (max-width: 480px) {
    body {
        padding: 10px;
    }
    
    .header h1 {
        font-size: 1.8rem;
    }
    
    .stat-number {
        font-size: 1.8rem;
    }
}
